<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.10 on linux)" generated="20231228 15:20:04.162" rpa="false" schemaversion="4">
<suite id="s1" name="Details" source="/home/ridham/PycharmProjects/webAutomation/Exercise2/Tests/Details.robot">
<test id="s1-t1" name="Valid Login" line="30">
<kw name="Launch Browser">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>https://www.volansys.com/</arg>
<arg>chrome</arg>
<arg>options=add_experimental_option("detach", True)</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231228 15:20:04.328" level="INFO">Opening browser 'chrome' to base url 'https://www.volansys.com/'.</msg>
<status status="PASS" starttime="20231228 15:20:04.327" endtime="20231228 15:20:13.725"/>
</kw>
<status status="PASS" starttime="20231228 15:20:04.327" endtime="20231228 15:20:13.726"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MAINMENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231228 15:20:13.735" level="INFO">Clicking element 'class=hamburger'.</msg>
<status status="PASS" starttime="20231228 15:20:13.727" endtime="20231228 15:20:13.862"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${OFFERING}</arg>
<arg>${TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20231228 15:20:13.863" endtime="20231228 15:20:13.905"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${OFFERING}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231228 15:20:13.906" level="INFO">Clicking element 'id=mega-menu-item-14301'.</msg>
<status status="PASS" starttime="20231228 15:20:13.906" endtime="20231228 15:20:13.960"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${QA}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20231228 15:20:13.962" level="INFO">Clicking link 'Xpath://*[@id="mega-menu-item-14162"]/a'.</msg>
<status status="PASS" starttime="20231228 15:20:13.961" endtime="20231228 15:20:14.094"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>${handles}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20231228 15:20:14.111" level="INFO">${handles} = ['69FA6FABE21E1C816463D5895A4569A1', '6F79375CB3FA67AD4FECA2DCEA8932E7']</msg>
<status status="PASS" starttime="20231228 15:20:14.094" endtime="20231228 15:20:14.111"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>${handles}[1]</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20231228 15:20:14.111" endtime="20231228 15:20:14.227"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${QA_DATA1}</arg>
<arg>${TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231228 15:20:14.229" endtime="20231228 15:20:16.211"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${DATA of Automation tools/frameworks}</var>
<arg>${QA_DATA1}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20231228 15:20:16.287" level="INFO">${DATA of Automation tools/frameworks} = Automation tools/frameworks
Selenium, Appium, Robot Framework, PyTest, Jenkins, TestNG</msg>
<status status="PASS" starttime="20231228 15:20:16.211" endtime="20231228 15:20:16.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${DATA of Automation tools/frameworks}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 15:20:16.288" level="INFO">Automation tools/frameworks
Selenium, Appium, Robot Framework, PyTest, Jenkins, TestNG</msg>
<status status="PASS" starttime="20231228 15:20:16.287" endtime="20231228 15:20:16.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${DATA_LIST}</var>
<arg>${DATA of Automation tools/frameworks}.split(${SPACE})</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231228 15:20:16.288" level="INFO">${DATA_LIST} = Automation tools/frameworks
Selenium, Appium, Robot Framework, PyTest, Jenkins, TestNG.split( )</msg>
<status status="PASS" starttime="20231228 15:20:16.288" endtime="20231228 15:20:16.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${DATA_LIST}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 15:20:16.289" level="INFO">Automation tools/frameworks
Selenium, Appium, Robot Framework, PyTest, Jenkins, TestNG.split( )</msg>
<status status="PASS" starttime="20231228 15:20:16.288" endtime="20231228 15:20:16.289"/>
</kw>
<kw name="Create and Append To CSV">
<arg>${CSV_file}</arg>
<arg>${header}</arg>
<arg>${DATA_LIST}</arg>
<kw name="File Should Exist">
<var>${file_exists}</var>
<arg>${file_path}</arg>
<msg timestamp="20231228 15:20:16.293" level="FAIL">No keyword with name 'File Should Exist' found.</msg>
<status status="FAIL" starttime="20231228 15:20:16.293" endtime="20231228 15:20:16.293"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${file_exists}</arg>
<arg>Create File</arg>
<arg>${file_path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231228 15:20:16.293" endtime="20231228 15:20:16.294"/>
</kw>
<kw name="Append To Csv File" library="CSVLibrary">
<arg>${file_path}</arg>
<arg>${data_list}</arg>
<arg>fieldnames=${fieldnames}</arg>
<doc>This keyword will append data to a new or existing CSV file.</doc>
<status status="NOT RUN" starttime="20231228 15:20:16.294" endtime="20231228 15:20:16.294"/>
</kw>
<status status="FAIL" starttime="20231228 15:20:16.289" endtime="20231228 15:20:16.294"/>
</kw>
<status status="FAIL" starttime="20231228 15:20:04.326" endtime="20231228 15:20:16.294">No keyword with name 'File Should Exist' found.</status>
</test>
<status status="FAIL" starttime="20231228 15:20:04.163" endtime="20231228 15:20:16.295"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Details">Details</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
