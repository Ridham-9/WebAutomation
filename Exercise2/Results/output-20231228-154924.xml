<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.10 on linux)" generated="20231228 15:49:24.916" rpa="false" schemaversion="4">
<suite id="s1" name="Details" source="/home/ridham/PycharmProjects/webAutomation/Exercise2/Tests/Details.robot">
<test id="s1-t1" name="Valid Login" line="34">
<kw name="Launch Browser">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>https://www.volansys.com/</arg>
<arg>chrome</arg>
<arg>options=add_experimental_option("detach", True)</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231228 15:49:25.055" level="INFO">Opening browser 'chrome' to base url 'https://www.volansys.com/'.</msg>
<status status="PASS" starttime="20231228 15:49:25.054" endtime="20231228 15:49:31.626"/>
</kw>
<status status="PASS" starttime="20231228 15:49:25.054" endtime="20231228 15:49:31.628"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MAINMENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231228 15:49:31.636" level="INFO">Clicking element 'class=hamburger'.</msg>
<status status="PASS" starttime="20231228 15:49:31.630" endtime="20231228 15:49:31.789"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${OFFERING}</arg>
<arg>${TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20231228 15:49:31.790" endtime="20231228 15:49:31.848"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${OFFERING}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231228 15:49:31.849" level="INFO">Clicking element 'id=mega-menu-item-14301'.</msg>
<status status="PASS" starttime="20231228 15:49:31.848" endtime="20231228 15:49:31.919"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${QA}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20231228 15:49:31.921" level="INFO">Clicking link 'Xpath://*[@id="mega-menu-item-14162"]/a'.</msg>
<status status="PASS" starttime="20231228 15:49:31.920" endtime="20231228 15:49:32.068"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>${handles}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20231228 15:49:32.085" level="INFO">${handles} = ['D6A6B20C3243D77EE2D184B7E7D40E78', 'D728787BCBAC16BB6299ADE60C07A4F9']</msg>
<status status="PASS" starttime="20231228 15:49:32.069" endtime="20231228 15:49:32.086"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>${handles}[1]</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20231228 15:49:32.086" endtime="20231228 15:49:32.234"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${QA_DATA1}</arg>
<arg>${TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231228 15:49:32.234" endtime="20231228 15:49:34.215"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${DATA of Automation tools/frameworks}</var>
<arg>${QA_DATA1}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20231228 15:49:34.279" level="INFO">${DATA of Automation tools/frameworks} = Automation tools/frameworks
Selenium, Appium, Robot Framework, PyTest, Jenkins, TestNG</msg>
<status status="PASS" starttime="20231228 15:49:34.216" endtime="20231228 15:49:34.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${DATA of Automation tools/frameworks}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 15:49:34.280" level="INFO">Automation tools/frameworks
Selenium, Appium, Robot Framework, PyTest, Jenkins, TestNG</msg>
<status status="PASS" starttime="20231228 15:49:34.280" endtime="20231228 15:49:34.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${DATA_LIST}</var>
<arg>${DATA of Automation tools/frameworks}.split(${SPACE})</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231228 15:49:34.281" level="INFO">${DATA_LIST} = Automation tools/frameworks
Selenium, Appium, Robot Framework, PyTest, Jenkins, TestNG.split( )</msg>
<status status="PASS" starttime="20231228 15:49:34.281" endtime="20231228 15:49:34.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${DATA_LIST}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231228 15:49:34.281" level="INFO">Automation tools/frameworks
Selenium, Appium, Robot Framework, PyTest, Jenkins, TestNG.split( )</msg>
<status status="PASS" starttime="20231228 15:49:34.281" endtime="20231228 15:49:34.282"/>
</kw>
<kw name="Create New CSV">
<arg>${NAME}</arg>
<arg>${header}</arg>
<kw name="Create List" library="BuiltIn">
<var>${header}</var>
<arg>${fieldnames}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20231228 15:49:34.283" level="INFO">${header} = ['div']</msg>
<status status="PASS" starttime="20231228 15:49:34.282" endtime="20231228 15:49:34.283"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>${FILE_NAME}</arg>
<arg>${header}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20231228 15:49:34.283" level="FAIL">TypeError: write() argument must be str, not list</msg>
<status status="FAIL" starttime="20231228 15:49:34.283" endtime="20231228 15:49:34.283"/>
</kw>
<status status="FAIL" starttime="20231228 15:49:34.282" endtime="20231228 15:49:34.284"/>
</kw>
<kw name="Append To CSV File">
<arg>${NAME}</arg>
<arg>${DATA_LIST}</arg>
<status status="NOT RUN" starttime="20231228 15:49:34.284" endtime="20231228 15:49:34.284"/>
</kw>
<status status="FAIL" starttime="20231228 15:49:25.053" endtime="20231228 15:49:34.284">TypeError: write() argument must be str, not list</status>
</test>
<status status="FAIL" starttime="20231228 15:49:24.917" endtime="20231228 15:49:34.285"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Details">Details</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
